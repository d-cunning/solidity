" -> "
" := "
" address() "
" calldatasize() "
" caller() "
" callvalue() "
" codesize() "
" coinbase() "
" difficulty() "
" dup1() "
" dup10() "
" dup11() "
" dup12() "
" dup13() "
" dup14() "
" dup15() "
" dup16() "
" dup2() "
" dup3() "
" dup4() "
" dup5() "
" dup6() "
" dup7() "
" dup8() "
" dup9() "
" gas() "
" gaslimit() "
" gasprice() "
" invalid() "
" number() "
" origin() "
" pc() "
" returndatasize() "
" stop() "
" swap1() "
" swap10() "
" swap11() "
" swap12() "
" swap13() "
" swap14() "
" swap15() "
" swap16() "
" swap2() "
" swap3() "
" swap4() "
" swap5() "
" swap6() "
" swap7() "
" swap8() "
" swap9() "
" timestamp() "
"("
")"
", "
"0x42"
"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
":"
"add("
"addmod("
"and("
"balance("
"blockhash("
"byte("
"call("
"callcode("
"calldatacopy("
"calldataload("
"case "
"codecopy("
"create("
"create2("
"default "
"delegatecall("
"div("
"eq("
"exp("
"extcodecopy("
"extcodehash("
"extcodesize("
"for "
"function "
"gt("
"hello"
"if "
"iszero("
"jump("
"jumpi("
"keccak256("
"let "
"log0("
"log1("
"log2("
"log3("
"log4("
"lt("
"mload("
"mod("
"msize"
"mstore("
"mstore8("
"mul("
"mulmod("
"not("
"or("
"pop("
"return("
"returndatacopy("
"revert("
"sar("
"sdiv("
"selfdestruct("
"sgt("
"shl("
"shr("
"signextend("
"sload("
"slt("
"smod("
"sstore("
"staticcall("
"sub("
"switch "
"xor("
"{"
"}"
